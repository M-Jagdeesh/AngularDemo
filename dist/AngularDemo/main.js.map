{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/directives/phone-number-format.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\" [formGroup]=\\\"appForm\\\">\\n    <label for=\\\"phone\\\">type phone number</label>\\n    <input id=\\\"phone\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" type=\\\"text\\\" phone-number-format>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n\n  public appForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.appForm = this.formBuilder.group({\n      phone: undefined,\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, HostListener, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[phone-number-format]'\r\n})\r\n\r\nexport class PhoneNumberDirective {\r\n    constructor(private element: ElementRef) {\r\n    }\r\n\r\n    @HostListener('ngModelChange', ['$event'])\r\n    onModelChange(event: string): void {\r\n        if (event) {\r\n            this.element.nativeElement.value =\r\n                this.transform(event).slice(0, 15);\r\n        }\r\n    }\r\n\r\n    transform(value: string): string {\r\n        if (value) {\r\n            let transformedInput: string = value.replace(/[^0-9]/g, '');\r\n            transformedInput = transformedInput.length > 3 ? '(' + transformedInput.substr(0, 3) + ') ' +\r\n                transformedInput.substr(3) : transformedInput.substr(0, 3);\r\n            transformedInput = transformedInput.length > 9 ? transformedInput.substr(0, 9) + '-' +\r\n                transformedInput.substr(9) : transformedInput.substr(0, 9);\r\n            return transformedInput;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PhoneNumberDirective } from './directives/phone-number-format.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PhoneNumberDirective\r\n    ],\r\n    exports: [\r\n        PhoneNumberDirective\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}